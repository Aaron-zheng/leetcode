/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode first = null;
        ListNode tmp = null;
        Integer last = null;
        while(true) {
            if(null == l1 && null == l2) {
                if(null != last) {
                    ListNode current = new ListNode(last);
                    tmp.next = current;
                }
                return first;
            }
            int v1 = (null == l1) ? 0 : l1.val;
            int v2 = (null == l2) ? 0 : l2.val;
            int v3 = v1 + v2 + ((null == last) ? 0 : last);
            if(v3 >= 10) {
                last = 1;
                v3 = v3 - 10;
            } else {
                last = null;
            }
            ListNode current = new ListNode(v3);

            if(null == tmp) {
                tmp = current;
                first = current;
            } else {
                tmp.next = current;
                tmp = current;
            }
            if(l1 != null) {
                l1 = l1.next;
            }
            if(l2 != null) {
                l2 = l2.next;
            }

        }

    }
}
//runtime:66 ms
//memory:40.6 MB
